{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","this","monster","name","src","id","email","Component","CardList","monsters","map","Search","onChange","handleChange","type","placeholder","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAmBeA,G,8DAfX,WAAaC,GAAS,uCACXA,G,qDAIP,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKC,KAAKH,MAAMI,QAAQC,KAAMC,IAAG,+BAA0BH,KAAKH,MAAMI,QAAQG,GAA7C,eACtC,4BAAKJ,KAAKH,MAAMI,QAAQC,OACxB,4BAAKF,KAAKH,MAAMI,QAAQI,e,GAVrBC,cCsBJC,G,wDApBX,WAAaV,GAAS,uCACXA,G,qDAMP,OACI,qBAAKC,UAAU,YAAf,SAEQE,KAAKH,MAAMW,SAASC,KAAK,SAAAR,GACtB,OACK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,a,GAbxBE,cCkBRI,G,wDAlBX,WAAab,GAAS,uCACXA,G,qDAMP,OACI,uBACIC,UAAU,SACVa,SAAWX,KAAKH,MAAMe,aACtBC,KAAK,SACLC,YAAad,KAAKH,MAAMiB,kB,GAbnBR,cCiDNS,E,kDA9Cb,WAAalB,GAAS,IAAD,8BACnB,cAAOA,IAiBTe,aAAe,SAAEI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJI,E,gEAQA,IAAD,OAClBI,MAAM,8CACLC,MAAM,SAAAC,GACL,OAAOA,EAASC,UAEjBF,MAAM,SAAAG,GACL,EAAKT,SAAS,CAAET,SAAUkB,S,+BAQpB,IAAD,EAE2B1B,KAAKqB,MAA/BH,EAFD,EAECA,YAEFS,EAJC,EAEcnB,SAEaoB,QAAQ,SAAA3B,GACxC,OAAOA,EAAQC,KAAK2B,cAAcC,SAAUZ,EAAYW,kBAG1D,OACE,sBAAK/B,UAAU,MAAf,UACE,8DACA,cAAC,EAAD,CACEgB,YAAY,kBACZF,aAAeZ,KAAKY,eAEtB,cAAC,EAAD,CACEJ,SAAWmB,W,GAvCHrB,aCOHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86ec1712.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nclass Card extends Component {\n    constructor( props ) {\n        super( props );\n    }\n\n    render() {\n        return(\n            <div className=\"card-container\">\n                <img alt={this.props.monster.name} src={`https://robohash.org/${this.props.monster.id}?set=set2`} />\n                <p>{ this.props.monster.name }</p>\n                <p>{ this.props.monster.email }</p>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from './../../components/Card/Card';\nimport \"./style.css\";\n\nclass CardList extends Component {\n    constructor( props ) {\n        super( props );\n            \n    }\n\n    render() {\n\n        return(\n            <div className=\"card-list\">\n                {\n                    this.props.monsters.map( monster => {\n                       return(\n                            <Card key={monster.id} monster={monster} />\n                       ) \n                    })\n                }\n            </div>\n        )\n    }\n}\nexport default CardList;","import React, { Component } from 'react';\nimport './style.css';\n\nclass Search extends Component {\n    constructor( props ) {\n        super( props );\n    }\n    \n    \n    render() {\n        \n        return(\n            <input \n                className=\"search\"\n                onChange={ this.props.handleChange } \n                type=\"search\" \n                placeholder={this.props.placeholder} \n            />\n        )\n    }\n}\n\nexport default Search;","import './App.css';\nimport React, { Component } from 'react';\nimport CardList from './components/CardList/CardList.jsx';\nimport Search from './components/Search/Search.jsx';\n\nclass App extends Component {\n  constructor( props ) {\n    super( props );\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then( response => {\n      return response.json();\n    })\n    .then( users => {\n      this.setState({ monsters: users });\n    });\n  }\n  \n  handleChange = ( e ) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { searchField, monsters } = this.state;\n\n    const filteredMonsters = monsters.filter( monster => {\n      return monster.name.toLowerCase().includes( searchField.toLowerCase() );\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Search and filter with React</h1>\n        <Search \n          placeholder=\"Search monsters\" \n          handleChange={ this.handleChange } \n        />\n        <CardList \n          monsters={ filteredMonsters }\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}